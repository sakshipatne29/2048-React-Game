{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\2048\\\\my-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { useEvent, getColors } from './util';\n\nfunction App() {\n  const UP_ARROW = 38;\n  const DOWN_ARROW = 40;\n  const LEFT_ARROW = 37;\n  const RIGHT_ARROW = 39;\n  const [gameOver, setGameOver] = useState(false);\n  const [data, setData] = useState([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]); //initialize\n\n  const initialize = () => {\n    let newGrid = cloneDeep(data);\n    console.log(newGrid);\n    addNumber(newGrid);\n    console.table(newGrid);\n    addNumber(newGrid);\n    console.table(newGrid);\n    setData(newGrid);\n  }; //AddNumber - Add an item\n\n\n  const addNumber = newGrid => {\n    let added = false;\n    let gridFull = false;\n    let attempts = 0;\n\n    while (!added) {\n      if (gridFull) {\n        break;\n      }\n\n      let rand1 = Math.floor(Math.random() * 4);\n      let rand2 = Math.floor(Math.random() * 4);\n      attempts++;\n\n      if (newGrid[rand1][rand2] == 0) {\n        newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n        added = true;\n      }\n\n      if (attempts > 50) {\n        gridFull = true;\n        let gameOver = checkIfGameOver();\n\n        if (gameOver) {\n          alert(\"Game Over\"); // setGameOver(true);\n        } // setGameOver(true);\n\n      }\n    }\n  }; //Swipe left\n\n\n  const swipeLeft = dummy => {\n    let oldGrid = data;\n    let newArray = cloneDeep(data);\n    console.table(newArray);\n\n    for (let i = 0; i < 4; i++) {\n      let b = newArray[i];\n      let slow = 0;\n      let fast = 1;\n\n      while (slow < 4) {\n        if (fast == 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n\n        if (b[slow] == 0 && b[fast] == 0) {\n          fast++;\n        } else if (b[slow] == 0 && b[fast] != 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast++;\n        } else if (b[slow] != 0 && b[fast] == 0) {\n          fast++;\n        } else if (b[slow] != 0 && b[fast] != 0) {\n          if (b[slow] == b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            b[fast] = 0;\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(oldGrid) != JSON.stringify(newArray)) {\n      addNumber(newArray);\n    }\n\n    if (!dummy) {\n      return newArray;\n    } else {\n      setData(newArray);\n    }\n  };\n\n  const swipeRight = dummy => {};\n\n  const swipeDown = dummy => {\n    console.log(data);\n    let b = [...data];\n    let oldData = JSON.parse(JSON.stringify(data));\n\n    for (let i = 3; i >= 0; i--) {\n      let slow = b.length - 1;\n      let fast = slow - 1;\n\n      while (slow > 0) {\n        if (fast == -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n\n        if (b[slow][i] == 0 && b[fast][i] == 0) {\n          fast--;\n        } else if (b[slow][i] == 0 && b[fast][i] != 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast--;\n        } else if (b[slow][i] != 0 && b[fast][i] == 0) {\n          fast--;\n        } else if (b[slow][i] != 0 && b[fast][i] != 0) {\n          if (b[slow][i] == b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            b[fast][i] = 0;\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(b) != JSON.stringify(b)) {\n      addNumber(b);\n    }\n\n    if (!dummy) {\n      return newArray;\n    } else {\n      setData(newArray);\n    }\n  };\n\n  const swipeUp = dummy => {\n    let b = [...data];\n    let oldData = JSON.parse(JSON.stringify(data));\n\n    for (let i = 0; i < 4; i++) {\n      let slow = 0;\n      let fast = 1;\n\n      while (slow < 4) {\n        if (fast == 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n\n        if (b[slow][i] == 0 && b[fast][i] == 0) {\n          fast++;\n        } else if (b[slow][i] == 0 && b[fast][i] != 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast++;\n        } else if (b[slow][i] != 0 && b[fast][i] == 0) {\n          fast++;\n        } else if (b[slow][i] != 0 && b[fast][i] == 0) {\n          if (b[slow][i] == b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            b[fast][i] = 0;\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(oldData) != JSON.stringify(b)) {\n      addNumber(b);\n    }\n\n    if (!dummy) {\n      return b;\n    } else {\n      setData(b);\n    }\n  }; //check gameover\n\n\n  const checkIfGameOver = () => {\n    console.log(\"Checking Game oVer\");\n    let checker = swipeLeft(true);\n\n    if (JSON.stringify(data) != JSON.stringify(checker)) {\n      return false;\n    }\n\n    let checker2 = swipeDown(true);\n\n    if (JSON.stringify(data) != JSON.stringify(checker2)) {\n      return false;\n    }\n\n    let checker3 = swipeRight(true);\n\n    if (JSON.stringify(data) != JSON.stringify(checker3)) {\n      return false;\n    }\n\n    let checker4 = swipeUp(true);\n\n    if (JSON.stringify(data) != JSON.stringify(checker4)) {\n      return false;\n    }\n\n    return true;\n  }; //reset\n\n\n  const resetGame = () => {\n    const emptyGrid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n    addNumber(emptyGrid);\n    addNumber(emptyGrid);\n    setData(emptyGrid);\n  }; //handle key down \n\n\n  const handleKeyDown = event => {\n    if (gameOver) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case UP_ARROW:\n        swipeUp();\n        break;\n\n      case DOWN_ARROW:\n        swipeDown();\n        break;\n\n      case LEFT_ARROW:\n        swipeLeft();\n        break;\n\n      case RIGHT_ARROW:\n        swipeRight();\n        break;\n\n      default:\n        break;\n    }\n\n    let gameOver = checkIfGameOver();\n\n    if (gameOver) {\n      alert(\"Game Over\");\n      setGameOver(true);\n    }\n  };\n\n  useEffect(() => {\n    initialize();\n    document.addEventListener(\"keydown\", handleKeyDown);\n  }, []);\n  useEvent(\"keydown\", handleKeyDown);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#AD9D8F\",\n      width: \"max-content\",\n      margin: \"auto\",\n      padding: 5,\n      borderRadius: 5,\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, data.map((row, oneIndex) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      key: oneIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }\n    }, row.map((digit, index) => /*#__PURE__*/React.createElement(Block, {\n      num: digit,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    })));\n  })), gameOver && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 18\n    }\n  }, \"GAME OVER\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: resetGame,\n    style: {\n      padding: 10,\n      background: \"#846F5B\",\n      color: \"#F8F5F0\",\n      width: 95,\n      margin: \"auto\",\n      marginTop: 20,\n      borderRadius: 7,\n      fontWeight: \"900,\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }\n  }, \"NEW GAME\"));\n}\n\nconst Block = ({\n  num\n}) => {\n  const {\n    blockstyle\n  } = style;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...blockstyle,\n      background: getColors(num) //color: num == 2|| num == 4 ? \"#645B52\"\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 3\n    }\n  }, num !== 0 ? num : \"\");\n};\n\nconst style = {\n  blockstyle: {\n    height: 80,\n    width: 80,\n    backgraound: \"lightgray\",\n    margin: 3,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 45,\n    fontWeight: \"800\",\n    color: \"white\"\n  }\n};\nexport default App;","map":{"version":3,"sources":["C:/REACT/2048/my-app/src/App.js"],"names":["React","useState","useEffect","cloneDeep","useEvent","getColors","App","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","gameOver","setGameOver","data","setData","initialize","newGrid","console","log","addNumber","table","added","gridFull","attempts","rand1","Math","floor","random","rand2","checkIfGameOver","alert","swipeLeft","dummy","oldGrid","newArray","i","b","slow","fast","JSON","stringify","swipeRight","swipeDown","oldData","parse","length","swipeUp","checker","checker2","checker3","checker4","resetGame","emptyGrid","handleKeyDown","event","keyCode","document","addEventListener","background","width","margin","padding","borderRadius","marginTop","map","row","oneIndex","display","digit","index","color","fontWeight","Block","num","blockstyle","style","height","backgraound","justifyContent","alignItems","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { useEvent, getColors } from './util';\n\nfunction App() {\n\n  const UP_ARROW = 38;\n  const DOWN_ARROW = 40;\n  const LEFT_ARROW = 37;\n  const RIGHT_ARROW = 39;\n  \n  const [gameOver, setGameOver] = useState(false);\n\n  const [data, setData] = useState([\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ]);\n   \n  //initialize\n  const initialize = () => {\n    \n    \n    let newGrid = cloneDeep(data);\n    console.log(newGrid);\n    \n    addNumber(newGrid);\n    console.table(newGrid); \n    addNumber(newGrid); \n    console.table(newGrid);\n    setData(newGrid);\n  };\n  \n  //AddNumber - Add an item\n  const addNumber = (newGrid) => {\n    let added = false;\n    let gridFull = false;\n    let attempts = 0;\n    while (!added) {\n      if(gridFull) {\n        break;\n      }\n      let rand1 = Math.floor(Math.random() * 4);\n      let rand2 = Math.floor(Math.random() * 4);\n      attempts ++;\n      if(newGrid[rand1][rand2] == 0){\n        newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n        added = true;\n      }\n\n      if (attempts > 50) {\n        gridFull = true;\n        let gameOver = checkIfGameOver();\n        if(gameOver) {\n          alert(\"Game Over\");\n          // setGameOver(true);\n        }\n        // setGameOver(true);\n      }\n    }\n  };\n  \n  //Swipe left\n  const swipeLeft = (dummy) => {\n    let oldGrid = data;\n    let newArray = cloneDeep(data);\n    console.table(newArray);\n    for(let i = 0; i < 4; i++) {\n      let b = newArray[i];\n      let slow = 0;\n      let fast = 1;\n      while(slow < 4) {\n        if(fast == 4) {\n          fast = slow +1;\n          slow++;\n          continue;\n        }\n        if(b[slow] == 0 && b[fast] == 0){\n          fast++;\n        } else if (b[slow] == 0 && b[fast] != 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast++;\n        } else if (b[slow] != 0 && b[fast] == 0) {\n          fast++;\n        } else if (b[slow] != 0 && b[fast] != 0) {\n          if (b[slow] == b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            b[fast] = 0;\n            fast = slow +1;\n            slow ++;\n          } else {\n            slow ++;\n            fast = slow +1;\n          }\n        }\n      }\n    }\n    if(JSON.stringify(oldGrid) != JSON.stringify(newArray)){\n      addNumber(newArray);\n    } \n    if(!dummy) {\n      return newArray\n    } else {\n      setData(newArray); \n    }\n  };\n\n  const swipeRight = (dummy) => {\n\n  }\n\n  const swipeDown = (dummy) => {\n    console.log(data);\n    let b = [...data];\n    let oldData = JSON.parse(JSON.stringify(data))\n    for(let i = 3; i >= 0; i--) {\n      let slow = b.length - 1;\n      let fast = slow - 1;\n      while (slow > 0) {\n        if(fast == -1) {\n          fast = slow - 1;\n          slow --;\n          continue;\n        }\n        if(b[slow][i] == 0 && b[fast][i] == 0) {\n          fast --;\n        } else if (b[slow][i] == 0 && b[fast][i] != 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast--;\n        } else if(b[slow][i] != 0 && b[fast][i] == 0) {\n          fast --;\n        } else if(b[slow][i] != 0 && b[fast][i] != 0) {\n          if(b[slow][i] == b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            b[fast][i] = 0;\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow --;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(b) != JSON.stringify(b)) {\n      addNumber(b);\n    }\n    if(!dummy) {\n      return newArray\n    } else {\n      setData(newArray); \n    }\n  }\n\n  const swipeUp = (dummy) => {\n    let b = [...data];\n    let oldData = JSON.parse(JSON.stringify(data))\n    for (let i = 0; i< 4; i++) {\n      let slow = 0;\n      let fast = 1;\n      while(slow < 4) {\n        if (fast == 4) {\n          fast = slow + 1;\n          slow ++;\n          continue;\n        }\n        if (b[slow][i] == 0 && b[fast][i] == 0) {\n          fast ++;\n        } else if (b[slow][i] == 0 && b[fast][i] != 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast++;\n        } else if(b[slow][i] != 0 && b[fast][i] == 0) {\n          fast++;\n        } else if (b[slow][i] != 0 && b[fast][i] == 0) {\n          if(b[slow][i] == b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            b[fast][i] = 0;\n            fast  =slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      } \n    }\n    if (JSON.stringify(oldData) != JSON.stringify(b)) {\n      addNumber(b);\n    }\n    if(!dummy) {\n      return b\n    } else {\n      setData(b); \n    }\n  };\n\n  //check gameover\n  const checkIfGameOver = () => {\n    console.log(\"Checking Game oVer\")\n    let checker = swipeLeft(true);\n    if (JSON.stringify(data) != JSON.stringify(checker)){\n      return  false;\n    }\n\n    let checker2 = swipeDown(true);\n    if(JSON.stringify(data) != JSON.stringify(checker2)) {\n      return false;\n    }\n\n    let checker3 = swipeRight(true);\n    if(JSON.stringify(data) != JSON.stringify(checker3)) {\n      return false;\n    }\n\n    let checker4 = swipeUp(true);\n    if(JSON.stringify(data) != JSON.stringify(checker4)) {\n      return false;\n    }\n    return true;\n  }\n\n  //reset\n  const resetGame = () => {\n    const emptyGrid = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    addNumber(emptyGrid);\n    addNumber(emptyGrid);\n    setData(emptyGrid);\n  };\n\n  //handle key down \n  const handleKeyDown = (event) => {\n    if (gameOver) {\n      return;\n    }\n    switch(event.keyCode) {\n      case UP_ARROW:\n        swipeUp();\n        break;\n      case DOWN_ARROW:\n        swipeDown();\n        break;\n      case LEFT_ARROW:\n        swipeLeft();\n        break;\n      case RIGHT_ARROW:\n        swipeRight();\n        break;\n      default:\n        break;\n    }\n    let gameOver = checkIfGameOver();\n    if(gameOver){\n      alert(\"Game Over\")\n      setGameOver(true)\n    }\n  };\n\n  useEffect(() => {\n    initialize();\n    document.addEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  useEvent(\"keydown\", handleKeyDown);\n  return (\n    <div className = \"App\">\n      <div \n    style = {{\n      background: \"#AD9D8F\",\n      width: \"max-content\",\n      margin: \"auto\",\n      padding: 5,\n      borderRadius: 5,\n      marginTop: 10,\n    }}>\n      {data.map((row, oneIndex) => {\n      return (\n        <div style = {{ display: \"flex\" }} key = {oneIndex} >\n          {row.map((digit, index) => (\n            <Block num = {digit} key = {index} />\n          ))}\n          </div>\n        );\n    })}\n    </div>\n    {gameOver && <div>GAME OVER</div>}\n    <div\n      onClick = {resetGame}\n      style = {{\n        padding:10,\n        background:\"#846F5B\",\n        color: \"#F8F5F0\",\n        width: 95,\n        margin: \"auto\",\n        marginTop: 20,\n        borderRadius: 7,\n        fontWeight: \"900,\"\n      }}>\n        NEW GAME \n      </div>\n    </div>\n  ); \n}\nconst Block = ({num}) => {\n  const {blockstyle} = style;\n  return ( \n  <div\n    style = {{\n      ...blockstyle,\n      background: getColors(num),\n      //color: num == 2|| num == 4 ? \"#645B52\"\n    }}\n  >\n    {num !== 0 ? num: \"\"}\n    {/* { gameOver && <div>GAME OVER</div>} */}\n  </div>\n  );\n};\nconst style = {\n  blockstyle: {\n    height: 80,\n    width: 80,\n    backgraound: \"lightgray\",\n    margin: 3,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 45,\n    fontWeight: \"800\",\n    color: \"white\",\n  },\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}