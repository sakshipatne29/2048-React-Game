{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\2048\\\\my-app\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [data, setData] = useState([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]);\n  {\n    data.map((row, oneIndex) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        key: oneIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }, row.map((digit, index) => /*#__PURE__*/React.createElement(Block, {\n        num: digit,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      })));\n    });\n  }\n}\n\nconst Block = () => {};\n\nexport default App;","map":{"version":3,"sources":["C:/REACT/2048/my-app/src/App.js"],"names":["React","useState","App","data","setData","map","row","oneIndex","display","digit","index","Block"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAC/B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAD+B,EAE/B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAF+B,EAG/B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAH+B,EAI/B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJ+B,CAAD,CAAhC;AAOA;AAACE,IAAAA,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACzB,0BACE;AAAK,QAAA,KAAK,EAAI;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;AAAmC,QAAA,GAAG,EAAID,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,GAAG,CAACD,GAAJ,CAAQ,CAACI,KAAD,EAAQC,KAAR,kBACP,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAID,KAAd;AAAqB,QAAA,GAAG,EAAIC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAOD,KARF;AAQI;AAEN;;AACD,MAAMC,KAAK,GAAG,MAAM,CAEnB,CAFD;;AAGA,eAAeT,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [data, setData] = useState([\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    \n  ])\n  {data.map((row, oneIndex) => {\n      return (\n        <div style = {{ display: \"flex\" }} key = {oneIndex} >\n          {row.map((digit, index) => (\n            <Block num = {digit} key = {index} />\n          ))}\n          </div>\n        );\n    })}\n  \n}\nconst Block = () => {\n  \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}